  generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["nApi"] 
}

// datasource db {
//   provider = "sqlite"
//   url      = "file:./dev.db"
// }
datasource db {
  provider = "postgresql"
  url      = "postgresql://ethan:qwerty@localhost:54321/postgresdb?schema=public"
}






model User {
  id                     String        @id @default(cuid())
  name                   String
  email                  String        @unique
  emailConfirmationToken String?
  googleId               String?       @unique
  facebookId             String?
  hasVerifiedEmail       Boolean?
  password               String?
  resetToken             String?
  resetTokenExpiry       Float?
  billing                String?
  address                String?
  role                   User_role     @default(USER)
  status                 User_status   @default(INACTIVE)
  CartItem               CartItem?
 
}

enum User_role {
  USER
  ADMIN
  MANAGER
}

enum User_status {
  INACTIVE
  ACTIVE
  BLOCKED
}

model CartItem {
  id       String @id 
  item     String
  quantity Int
  userId   String
  User     User   @relation(fields: [userId], references: [id])
  products Product[]
  // productId String
  // Product  Product @relation(fields: [productId], references: [id]
}

model Category {
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  name      String    @unique
  image     String[]
  seoTags String[]
  Status Boolean
  slug      String    @unique
  updatedAt DateTime  @default(now())
  sub_Catagorys sub_catagory[]
}

model sub_catagory {
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  name      String    @unique
  Status    Boolean
  image     String[]
  seoTags   String[]
  slug      String    @unique
  updatedAt DateTime  @default(now())
  catagoryid String
  Catagory   Category @relation(fields: [catagoryid], references: [id])
  Products   Product[]
}

// model ProductImage {
//   id        String   @id @default(cuid())
//   image     String[]
//   productId String?
//   product   Product?  @relation(fields: [productId], references: [id])
// }

model Product {
  id            String         @id @default(cuid())
  name          String
  slug          String
  sub_catagory  String
  sku           String         @unique
  price         Int
  productImage  String[]
  product_thumbnail String
  description   String
  unit          Int
  discount      Int?
  salePrice     Int
  variants       Json[]
  seoTags       String[]
  status        Boolean
  updatedAt     DateTime       @default(now())
  cartid        String?
  productenquerieID String?
  subCatagory      sub_catagory     @relation(fields: [sub_catagory], references: [id])
  cart  CartItem? @relation(fields: [cartid], references: [id])
  productEnquerie Product_Enquerie? @relation(fields: [productenquerieID],references:[id])

}

model Product_Enquerie {
  id            String @id @default(cuid())
  email         String
  company_name  String
  address       String
  country       String
  state         String
  phoneNumber   String
  products      Product[]
  unit          Int
  orderFrequency String

} 




